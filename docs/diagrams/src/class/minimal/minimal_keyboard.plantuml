@startuml minimal_keyboard
!define LIGHTBLUE
!includeurl https://raw.githubusercontent.com/grelltrier/RedDress-PlantUML/master/style.puml

package keyboard {
    +enum Interaction {
        {field} Tap(TapDuration, TapMotion)
        {field} Swipe(SwipeAction)
    }

    +class Keyboard {
        {field} active_view: (String, String)
        {field} latched_keys: HashSet<String>
        {field} layout_of_active_key: String
        {field} view_of_active_key: String
        {field} next_layout: Option<String>
        {field} next_view: Option<String>

        {static} +from(ui_connector: ui_connector::UIConnector, layout_meta_hashmap: &HashMap<String, LayoutMeta>):Keyboard
        +get_views(): &HashMap<(String, String), View>
        +input(x: i32, y: i32, interaction: Interaction)
        +fetch_events()
        +submit_text(text: String)
    }

    +class UIConnector {
        message_pipe: relm::Relm<Win>

        {static} +new(message_pipe: relm::Relm<Win>): UIConnector
        +emit(msg: Msg)
    }

    +class Key {
        id: String
        actions: HashMap<Interaction, Vec<KeyAction>>

        {static} +from(key_name: &str, key_meta: &KeyMeta): Key
        +get_id(): String
        +get_actions(interaction: Interaction): Option<&Vec<KeyAction>>
    }

    +class View {
        cell_height: i32
        cell_width: i32

        {static} +from(key_arrangement: &KeyArrangement, key_meta: &HashMap<String, KeyMeta>): View
        +get_closest_key(input_x: i32, input_y: i32): Option<Key>
    }

    Keyboard *-- decoder.Decoder
    Keyboard *-- submitter.Submitter
    UIConnector --* Keyboard
    Keyboard o-- "0..1" Key : saves last active
    Keyboard *-- "many" View
    KeyboardVisibility ()- UIConnector
    UIConnector -() HintPurpose
    View *-- "many" Key : stores position
    Keyboard - "many" LayoutMeta : from
    UIConnector -- user_interface.Msg : emits


    submitter.Submitter -[hidden]- decoder.Decoder
}
@enduml