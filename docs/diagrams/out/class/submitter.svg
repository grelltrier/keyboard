<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1099px" preserveAspectRatio="none" style="width:2059px;height:1099px;background:#777777;" version="1.1" viewBox="0 0 2059 1099" width="2059px" zoomAndPan="magnify"><defs><filter height="300%" id="fvwsc64e42txd" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[3e09a69be21538652ac4edbcb9c29289]
cluster submitter--><polygon fill="#777777" filter="url(#fvwsc64e42txd)" points="16,6.294,87,6.294,94,29.0939,2037,29.0939,2037,1087.294,16,1087.294,16,6.294" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="16" x2="94" y1="29.0939" y2="29.0939"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="65" x="20" y="21.2999">submitter</text><!--MD5=[dc08e57b8afea6c01313f010ef7536b5]
class Submission--><rect fill="#2E2E2E" filter="url(#fvwsc64e42txd)" height="107.9995" id="Submission" style="stroke: #1B1B1B; stroke-width: 1.5;" width="148" x="232" y="138.294"/><ellipse cx="268.5" cy="151.294" fill="#EB937F" rx="8" ry="8" style="stroke: #1B1B1B; stroke-width: 1.0;"/><path d="M267.0156,151.8409 L270.8594,151.8409 L270.8594,150.4659 L267.0156,150.4659 L267.0156,148.6534 L271.1719,148.6534 L271.1719,147.2784 L265.375,147.2784 L265.375,155.294 L271.3594,155.294 L271.3594,153.919 L267.0156,153.919 L267.0156,151.8409 Z "/><ellipse cx="289.5" cy="150.294" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#FFFFFF" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="296.5" y="154.913">Submission</text><line style="stroke: #1B1B1B; stroke-width: 1.5;" x1="233" x2="379" y1="164.294" y2="164.294"/><line style="stroke: #1B1B1B; stroke-width: 1.5;" x1="233" x2="379" y1="172.294" y2="172.294"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="238" y="186.5129">Text(String)</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="238" y="199.7128">Keycode(u32)</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="238" y="212.9127">ToggleKeycode(u32)</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="238" y="226.1126">Modifier(keyboard::Modifier)</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="238" y="239.3125">Erase(u32)</text><!--MD5=[dca4b64ba4436cadd06686de479cd39f]
class Submitter--><rect fill="#2E2E2E" filter="url(#fvwsc64e42txd)" height="134.3993" id="Submitter" style="stroke: #1B1B1B; stroke-width: 1.5;" width="509" x="465.5" y="125.294"/><ellipse cx="477.5" cy="138.294" fill="#1A66C2" rx="8" ry="8" style="stroke: #1B1B1B; stroke-width: 1.0;"/><path d="M481,136.9971 C480.9531,136.294 480.7969,135.8565 480.4688,135.4034 C479.8438,134.5909 478.8594,134.1377 477.6563,134.1377 C475.3906,134.1377 473.9844,135.7627 473.9844,138.3565 C473.9844,140.9346 475.375,142.544 477.6094,142.544 C479.6094,142.544 480.9375,141.3877 481.0313,139.5596 L479.4219,139.5596 C479.3125,140.5752 478.6875,141.1534 477.6563,141.1534 C476.375,141.1534 475.6406,140.1221 475.6406,138.3721 C475.6406,136.6065 476.4219,135.544 477.7188,135.544 C478.6719,135.544 479.2031,136.0127 479.4219,136.9971 L481,136.9971 Z "/><ellipse cx="493.5" cy="137.294" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#FFFFFF" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="500.5" y="141.913">Submitter</text><rect fill="#777777" height="16.8499" style="stroke: #AAAAAA; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="423" x="554.5" y="122.294"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="421" x="555.5" y="135.3939">T implements KeyboardVisibility + HintPurpose, D implements ReceiveSurroundingText</text><line style="stroke: #1B1B1B; stroke-width: 1.5;" x1="466.5" x2="973.5" y1="151.294" y2="151.294"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="471.5" y="165.5129">event_queue: EventQueue</text><line style="stroke: #1B1B1B; stroke-width: 1.5;" x1="466.5" x2="973.5" y1="172.4939" y2="172.4939"/><ellipse cx="476.5" cy="183.4939" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="300" x="482.5" y="186.7128">new(ui_connector: T, content_connector: D): Submitter&lt;T, D&gt;</text><ellipse cx="476.5" cy="196.6938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="482.5" y="199.9127">fetch_events()</text><ellipse cx="476.5" cy="209.8937" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="482.5" y="213.1126">release_all_keys_and_modifiers()</text><ellipse cx="476.5" cy="223.0936" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="482.5" y="226.3125">submit(submission: Submission)</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="482.5" y="239.5124">submit_text(text: &amp;str)</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="482.5" y="252.7123">erase(no_char: u32) {</text><!--MD5=[537c84a18303d960500a8975d1ffb376]
class Wayland--><rect fill="#2E2E2E" filter="url(#fvwsc64e42txd)" height="134.3993" id="Wayland" style="stroke: #1B1B1B; stroke-width: 1.5;" width="519" x="1083.5" y="125.294"/><ellipse cx="1318.5" cy="138.294" fill="#1A66C2" rx="8" ry="8" style="stroke: #1B1B1B; stroke-width: 1.0;"/><path d="M1322,136.9971 C1321.9531,136.294 1321.7969,135.8565 1321.4688,135.4034 C1320.8438,134.5909 1319.8594,134.1377 1318.6563,134.1377 C1316.3906,134.1377 1314.9844,135.7627 1314.9844,138.3565 C1314.9844,140.9346 1316.375,142.544 1318.6094,142.544 C1320.6094,142.544 1321.9375,141.3877 1322.0313,139.5596 L1320.4219,139.5596 C1320.3125,140.5752 1319.6875,141.1534 1318.6563,141.1534 C1317.375,141.1534 1316.6406,140.1221 1316.6406,138.3721 C1316.6406,136.6065 1317.4219,135.544 1318.7188,135.544 C1319.6719,135.544 1320.2031,136.0127 1320.4219,136.9971 L1322,136.9971 Z "/><text fill="#FFFFFF" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="1334.5" y="141.913">Wayland</text><line style="stroke: #1B1B1B; stroke-width: 1.5;" x1="1084.5" x2="1601.5" y1="151.294" y2="151.294"/><line style="stroke: #1B1B1B; stroke-width: 1.5;" x1="1084.5" x2="1601.5" y1="159.294" y2="159.294"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="196" x="1100.5" y="173.5129">get_wl_display_seat(): (Display, WlSeat)</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="336" x="1100.5" y="186.7128">get_wl_global_mgr(display: &amp;Display): (EventQueue, GlobalManager)</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="496" x="1100.5" y="199.9127">try_get_mgrs(global_mgr: &amp;GlobalManager): (Option&lt;VirtualKeyboardMgr&gt;, Option&lt;InputMethodMgr&gt;)</text><ellipse cx="1094.5" cy="209.8937" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="182" x="1100.5" y="213.1126">get_layer_shell(): Option&lt;LayerShell&gt;</text><ellipse cx="1094.5" cy="223.0936" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="457" x="1100.5" y="226.3125">init_wayland(): (EventQueue, WlSeat, Option&lt;VirtualKeyboardMgr&gt;, Option&lt;InputMethodMgr&gt;)</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="1103.5" y="239.5124"/><ellipse cx="1094.5" cy="249.4934" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="215" x="1100.5" y="252.7123">make_overlay_layer(window: &amp;gtk::Window)</text><path d="M1155,41.294 L1155,64.4939 A0,0 0 0 0 1155,64.4939 L1339,64.4939 L1343,125.254 L1347,64.4939 L1531,64.4939 A0,0 0 0 0 1531,64.4939 L1531,51.294 L1521,41.294 L1155,41.294 A0,0 0 0 0 1155,41.294 " fill="#1A66C2" filter="url(#fvwsc64e42txd)" style="stroke: #002642; stroke-width: 1.0;"/><path d="M1521,41.294 L1521,51.294 L1531,51.294 L1521,41.294 " fill="#1A66C2" style="stroke: #002642; stroke-width: 1.0;"/><text fill="#FFFFFF" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="1161" y="56.5129">This class does not exist and only serves for the modeling of its functions</text><!--MD5=[0f7a950793f88a9661d1d9024ceb446c]
class VKService--><rect fill="#2E2E2E" filter="url(#fvwsc64e42txd)" height="319.1979" id="VKService" style="stroke: #1B1B1B; stroke-width: 1.5;" width="495" x="32.5" y="334.294"/><ellipse cx="245" cy="347.294" fill="#1A66C2" rx="8" ry="8" style="stroke: #1B1B1B; stroke-width: 1.0;"/><path d="M248.5,345.9971 C248.4531,345.294 248.2969,344.8565 247.9688,344.4034 C247.3438,343.5909 246.3594,343.1377 245.1563,343.1377 C242.8906,343.1377 241.4844,344.7627 241.4844,347.3565 C241.4844,349.9346 242.875,351.544 245.1094,351.544 C247.1094,351.544 248.4375,350.3877 248.5313,348.5596 L246.9219,348.5596 C246.8125,349.5752 246.1875,350.1534 245.1563,350.1534 C243.875,350.1534 243.1406,349.1221 243.1406,347.3721 C243.1406,345.6065 243.9219,344.544 245.2188,344.544 C246.1719,344.544 246.7031,345.0127 246.9219,345.9971 L248.5,345.9971 Z "/><ellipse cx="266" cy="346.294" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#FFFFFF" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="273" y="350.913">VKService</text><line style="stroke: #1B1B1B; stroke-width: 1.5;" x1="33.5" x2="526.5" y1="360.294" y2="360.294"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="38.5" y="374.5129">base_time: std::time::Instant</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="38.5" y="387.7128">pressed_keys: HashSet&lt;u32&gt;</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="38.5" y="400.9127">pressed_modifiers: ModifiersBitflag</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="38.5" y="414.1126">virtual_keyboard: Proxy&lt;ZwpVirtualKeyboardV1&gt;</text><line style="stroke: #1B1B1B; stroke-width: 1.5;" x1="33.5" x2="526.5" y1="421.0936" y2="421.0936"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="30" x="49.5" y="435.3125">drop()</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="52.5" y="448.5124"/><ellipse cx="43.5" cy="458.4934" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="472" x="49.5" y="461.7123">new(seat: &amp;WlSeat, vk_mgr: &amp;Main&lt;ZwpVirtualKeyboardManagerV1&gt;):  Arc&lt;Mutex&lt;VKService&gt;&gt;</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="380" x="49.5" y="474.9122">init_virtual_keyboard(virtual_keyboard_main: &amp; Main&lt;ZwpVirtualKeyboardV1&gt;)</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="49" x="49.5" y="488.1121">get_time()</text><ellipse cx="43.5" cy="498.0931" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="49.5" y="501.312">release_all_keys_and_modifiers(): Result&lt;(), SubmitError&gt;</text><ellipse cx="43.5" cy="511.293" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="49.5" y="514.5119">release_all_keys(): Result&lt;(), SubmitError&gt;</text><ellipse cx="43.5" cy="524.4929" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="49.5" y="527.7118">press_release_key(keycode: u32): Result&lt;(), SubmitError&gt;</text><ellipse cx="43.5" cy="537.6928" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="49.5" y="540.9117">toggle_key(keycode: u32): Result&lt;(), SubmitError&gt;</text><ellipse cx="43.5" cy="550.8927" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="49.5" y="554.1116">send_key(keycode: u32, keymotion: KeyMotion): Result&lt;(), SubmitError&gt;</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="380" x="49.5" y="567.3115">send_keycode(keycode: u32, keymotion: KeyMotion): Result&lt;(), SubmitError&gt;</text><ellipse cx="43.5" cy="577.2925" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="49.5" y="580.5114">release_all_modifiers(): Result&lt;(), SubmitError&gt;</text><ellipse cx="43.5" cy="590.4924" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="49.5" y="593.7113">toggle_modifier(modifier: keyboard::Modifier): Result&lt;(), SubmitError&gt;</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="49.5" y="606.9112">send_modifiers_bitflag(modifiers: ModifiersBitflag): Result&lt;(), SubmitError&gt;</text><ellipse cx="43.5" cy="616.8922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="49.5" y="620.1111">send_unicode_str(text: &amp;str): Result&lt;(), SubmitError&gt;</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="49.5" y="633.311">send_unicode_char(unicode_char: char): Result&lt;(), SubmitError&gt;</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307" x="49.5" y="646.5109">release_keys_on_ctrl_c(vk_service: Arc&lt;Mutex&lt;VKService&gt;&gt;)</text><!--MD5=[3c927132dc81dc9fa10c6ffffa80370f]
class IMProtocolState--><rect fill="#2E2E2E" filter="url(#fvwsc64e42txd)" height="134.3993" id="IMProtocolState" style="stroke: #1B1B1B; stroke-width: 1.5;" width="184" x="1366" y="820.794"/><ellipse cx="1416" cy="833.794" fill="#1A66C2" rx="8" ry="8" style="stroke: #1B1B1B; stroke-width: 1.0;"/><path d="M1419.5,832.4971 C1419.4531,831.794 1419.2969,831.3565 1418.9688,830.9034 C1418.3438,830.0909 1417.3594,829.6377 1416.1563,829.6377 C1413.8906,829.6377 1412.4844,831.2627 1412.4844,833.8565 C1412.4844,836.4346 1413.875,838.044 1416.1094,838.044 C1418.1094,838.044 1419.4375,836.8877 1419.5313,835.0596 L1417.9219,835.0596 C1417.8125,836.0752 1417.1875,836.6534 1416.1563,836.6534 C1414.875,836.6534 1414.1406,835.6221 1414.1406,833.8721 C1414.1406,832.1065 1414.9219,831.044 1416.2188,831.044 C1417.1719,831.044 1417.7031,831.5127 1417.9219,832.4971 L1419.5,832.4971 Z "/><text fill="#FFFFFF" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="1432" y="837.413">IMProtocolState</text><line style="stroke: #1B1B1B; stroke-width: 1.5;" x1="1367" x2="1549" y1="846.794" y2="846.794"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1372" y="861.0129">surrounding_text: String</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="1372" y="874.2128">cursor: u32</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="1372" y="887.4127">content_purpose: ContentPurpose</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="1372" y="900.6126">content_hint: ContentHint</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="1372" y="913.8125">text_change_cause: ChangeCause</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="1372" y="927.0124">active: bool</text><line style="stroke: #1B1B1B; stroke-width: 1.5;" x1="1367" x2="1549" y1="933.9934" y2="933.9934"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1372" y="948.2123">fn default(): IMProtocolState</text><!--MD5=[aadc9ae5b8e1ad22675b76a9af1ca05c]
class IMServiceArc--><rect fill="#2E2E2E" filter="url(#fvwsc64e42txd)" height="319.1979" id="IMServiceArc" style="stroke: #1B1B1B; stroke-width: 1.5;" width="721" x="559.5" y="728.294"/><ellipse cx="671" cy="741.294" fill="#1A66C2" rx="8" ry="8" style="stroke: #1B1B1B; stroke-width: 1.0;"/><path d="M674.5,739.9971 C674.4531,739.294 674.2969,738.8565 673.9688,738.4034 C673.3438,737.5909 672.3594,737.1377 671.1563,737.1377 C668.8906,737.1377 667.4844,738.7627 667.4844,741.3565 C667.4844,743.9346 668.875,745.544 671.1094,745.544 C673.1094,745.544 674.4375,744.3877 674.5313,742.5596 L672.9219,742.5596 C672.8125,743.5752 672.1875,744.1534 671.1563,744.1534 C669.875,744.1534 669.1406,743.1221 669.1406,741.3721 C669.1406,739.6065 669.9219,738.544 671.2188,738.544 C672.1719,738.544 672.7031,739.0127 672.9219,739.9971 L674.5,739.9971 Z "/><text fill="#FFFFFF" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="687" y="744.913">IMServiceArc</text><rect fill="#777777" height="16.8499" style="stroke: #AAAAAA; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="423" x="860.5" y="725.294"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="421" x="861.5" y="738.3939">T implements KeyboardVisibility + HintPurpose, D implements ReceiveSurroundingText</text><line style="stroke: #1B1B1B; stroke-width: 1.5;" x1="560.5" x2="1279.5" y1="754.294" y2="754.294"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="565.5" y="768.5129">im: Main&lt;ZwpInputMethodV2&gt;</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="565.5" y="781.7128">ui_connector: T</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="565.5" y="794.9127">content_connector: D</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="565.5" y="808.1126">serial: Wrapping&lt;u32&gt;</text><line style="stroke: #1B1B1B; stroke-width: 1.5;" x1="560.5" x2="1279.5" y1="815.0936" y2="815.0936"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="709" x="565.5" y="829.3125">new(seat: &amp;WlSeat, im_manager: Main&lt;ZwpInputMethodManagerV2&gt;, ui_connector: T, content_connector: D): Arc&lt;Mutex&lt;IMServiceArc&lt;T, D&gt;&gt;&gt;</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="565.5" y="842.5124">assign_filter(im_service: Arc&lt;Mutex&lt;IMServiceArc&lt;T, D&gt;&gt;&gt;)</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="565.5" y="855.7123">commit_string(text: String): Result&lt;(), SubmitError&gt;</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="565.5" y="868.9122">delete_surrounding_text(before: u32, after: u32): Result&lt;(), SubmitError&gt;</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="565.5" y="882.1121">commit(): Result&lt;(), SubmitError&gt;</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="565.5" y="895.312">is_active(): bool</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="565.5" y="908.5119">get_surrounding_text(): (String, String)</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="565.5" y="921.7118">handle_activate()</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="565.5" y="934.9117">handle_deactivate()</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="565.5" y="948.1116">handle_surrounding_text(text: String, cursor: u32, anchor: u32)</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="565.5" y="961.3115">handle_text_change_cause(cause: ChangeCause)</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="565.5" y="974.5114">handle_content_type(hint: ContentHint, purpose: ContentPurpose)</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="565.5" y="987.7113">handle_done()</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="565.5" y="1000.9112">handle_unavailable()</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="565.5" y="1014.1111">pending_becomes_current()</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="565.5" y="1027.311">limit_before_after(before: u32, after: u32): (u32, u32)</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="565.5" y="1040.5109">update_cursor_and_surrounding_text(before: u32, after: u32)</text><!--MD5=[e57a0e23a026c52207210b3f81bd0582]
class IMService--><rect fill="#2E2E2E" filter="url(#fvwsc64e42txd)" height="121.1994" id="IMService" style="stroke: #1B1B1B; stroke-width: 1.5;" width="644" x="572" y="433.294"/><ellipse cx="647.5" cy="446.294" fill="#1A66C2" rx="8" ry="8" style="stroke: #1B1B1B; stroke-width: 1.0;"/><path d="M651,444.9971 C650.9531,444.294 650.7969,443.8565 650.4688,443.4034 C649.8438,442.5909 648.8594,442.1377 647.6563,442.1377 C645.3906,442.1377 643.9844,443.7627 643.9844,446.3565 C643.9844,448.9346 645.375,450.544 647.6094,450.544 C649.6094,450.544 650.9375,449.3877 651.0313,447.5596 L649.4219,447.5596 C649.3125,448.5752 648.6875,449.1534 647.6563,449.1534 C646.375,449.1534 645.6406,448.1221 645.6406,446.3721 C645.6406,444.6065 646.4219,443.544 647.7188,443.544 C648.6719,443.544 649.2031,444.0127 649.4219,444.9971 L651,444.9971 Z "/><ellipse cx="668.5" cy="445.294" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#FFFFFF" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="49" x="675.5" y="449.913">IMService</text><rect fill="#777777" height="16.8499" style="stroke: #AAAAAA; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="423" x="796" y="430.294"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="421" x="797" y="443.3939">T implements KeyboardVisibility + HintPurpose, D implements ReceiveSurroundingText</text><line style="stroke: #1B1B1B; stroke-width: 1.5;" x1="573" x2="1215" y1="459.294" y2="459.294"/><line style="stroke: #1B1B1B; stroke-width: 1.5;" x1="573" x2="1215" y1="467.294" y2="467.294"/><ellipse cx="583" cy="478.294" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="621" x="589" y="481.5129">new(seat: &amp;WlSeat, im_manager: Main&lt;ZwpInputMethodManagerV2&gt;, ui_connector: T, content_connector: D): IMService&lt;T, D&gt;</text><ellipse cx="583" cy="491.4939" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="589" y="494.7128">commit_string(text: String): Result&lt;(), SubmitError&gt;</text><ellipse cx="583" cy="504.6938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="589" y="507.9127">delete_surrounding_text(before: u32, after: u32): Result&lt;(), SubmitError&gt;</text><ellipse cx="583" cy="517.8937" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="589" y="521.1126">commit(): Result&lt;(), SubmitError&gt;</text><ellipse cx="583" cy="531.0936" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="589" y="534.3125">is_active(): bool</text><ellipse cx="583" cy="544.2935" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="589" y="547.5124">get_surrounding_text(): (String, String)</text><!--MD5=[606a42b43166885bcf025350782514df]
class KeyboardVisibility--><rect fill="#2E2E2E" filter="url(#fvwsc64e42txd)" height="68.3998" id="KeyboardVisibility" style="stroke: #1B1B1B; stroke-width: 1.5;" width="123" x="1471.5" y="459.794"/><ellipse cx="1483.5" cy="472.794" fill="#B4A7E5" rx="8" ry="8" style="stroke: #1B1B1B; stroke-width: 1.0;"/><path d="M1484.3438,468.7784 L1482.6875,468.7784 L1482.6875,476.794 L1484.3438,476.794 L1484.3438,468.7784 Z "/><ellipse cx="1499.5" cy="471.794" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#FFFFFF" font-family="Verdana" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="85" x="1506.5" y="477.4689">KeyboardVisibility</text><line style="stroke: #1B1B1B; stroke-width: 1.5;" x1="1472.5" x2="1593.5" y1="485.794" y2="485.794"/><line style="stroke: #1B1B1B; stroke-width: 1.5;" x1="1472.5" x2="1593.5" y1="493.794" y2="493.794"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="1477.5" y="508.0129">show_keyboard()</text><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="1477.5" y="521.2128">hide_keyboard()</text><!--MD5=[7d3b6eeac1af70ad89def482eeadc581]
class ReceiveSurroundingText--><rect fill="#2E2E2E" filter="url(#fvwsc64e42txd)" height="55.1999" id="ReceiveSurroundingText" style="stroke: #1B1B1B; stroke-width: 1.5;" width="367" x="1629.5" y="466.294"/><ellipse cx="1743" cy="479.294" fill="#B4A7E5" rx="8" ry="8" style="stroke: #1B1B1B; stroke-width: 1.0;"/><path d="M1743.8438,475.2784 L1742.1875,475.2784 L1742.1875,483.294 L1743.8438,483.294 L1743.8438,475.2784 Z "/><ellipse cx="1764" cy="478.294" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#FFFFFF" font-family="Verdana" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="121" x="1771" y="483.9689">ReceiveSurroundingText</text><line style="stroke: #1B1B1B; stroke-width: 1.5;" x1="1630.5" x2="1995.5" y1="492.294" y2="492.294"/><line style="stroke: #1B1B1B; stroke-width: 1.5;" x1="1630.5" x2="1995.5" y1="500.294" y2="500.294"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="1635.5" y="514.5129">text_changed(string_left_of_cursor: String, string_right_of_cursor: String)</text><!--MD5=[0ddbbbb91026d6eadfd97a0767dca49c]
class HintPurpose--><rect fill="#2E2E2E" filter="url(#fvwsc64e42txd)" height="55.1999" id="HintPurpose" style="stroke: #1B1B1B; stroke-width: 1.5;" width="411" x="1585.5" y="860.294"/><ellipse cx="1751.5" cy="873.294" fill="#B4A7E5" rx="8" ry="8" style="stroke: #1B1B1B; stroke-width: 1.0;"/><path d="M1752.3438,869.2784 L1750.6875,869.2784 L1750.6875,877.294 L1752.3438,877.294 L1752.3438,869.2784 Z "/><ellipse cx="1772.5" cy="872.294" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#FFFFFF" font-family="Verdana" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="60" x="1779.5" y="877.9689">HintPurpose</text><line style="stroke: #1B1B1B; stroke-width: 1.5;" x1="1586.5" x2="1995.5" y1="886.294" y2="886.294"/><line style="stroke: #1B1B1B; stroke-width: 1.5;" x1="1586.5" x2="1995.5" y1="894.294" y2="894.294"/><text fill="#AAAAAA" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="1591.5" y="908.5129">fn set_hint_purpose(content_hint: ContentHint, content_purpose: ContentPurpose)</text><!--MD5=[f0e1d8d084449684e272dae99acb38d1]
reverse link Submitter to IMService--><path d="M765.1,270.924 C794.47,321.474 832.2,386.424 859.24,432.964 " fill="none" id="Submitter&lt;-IMService" style="stroke: #FFFFFF; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="758.4,259.394,757.9539,266.5913,764.4259,269.7713,764.8721,262.574,758.4,259.394" style="stroke: #FFFFFF; stroke-width: 1.0;"/><text fill="#BBBBBB" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="782" y="300.5129">uses</text><polygon fill="#BBBBBB" points="790.5,309.4939,792.5,313.4939,794.5,309.4939,790.5,309.4939" style="stroke: #BBBBBB; stroke-width: 1.0;"/><!--MD5=[1ecb2c4a1c444e022393c52b9bf97fc6]
reverse link Submitter to VKService--><path d="M611.91,266.864 C581.61,287.494 547.45,310.744 512.86,334.294 " fill="none" id="Submitter&lt;-VKService" style="stroke: #FFFFFF; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="622.9,259.394,615.6892,259.4643,612.9808,266.1475,620.1916,266.0771,622.9,259.394" style="stroke: #FFFFFF; stroke-width: 1.0;"/><polygon fill="#BBBBBB" points="583,296.3939,579,298.3939,583,300.3939,583,296.3939" style="stroke: #BBBBBB; stroke-width: 1.0;"/><text fill="#BBBBBB" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="589" y="300.5129">uses</text><!--MD5=[49eaf97e5b8a2296687bbcfe56202c23]
link Submission to Submitter--><path d="M380.01,192.294 C404.9,192.294 434.23,192.294 465.07,192.294 " fill="none" id="Submission-Submitter" style="stroke: #FFFFFF; stroke-width: 1.0;"/><polygon fill="#BBBBBB" points="403.25,181.3939,399.25,183.3939,403.25,185.3939,403.25,181.3939" style="stroke: #BBBBBB; stroke-width: 1.0;"/><text fill="#BBBBBB" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="409.25" y="185.5129">handles</text><!--MD5=[2e625c2383f9e62b166ba916fb631657]
link Submitter to Wayland--><path d="M974.75,192.294 C1010.56,192.294 1047.4,192.294 1083.3,192.294 " fill="none" id="Submitter-Wayland" style="stroke: #FFFFFF; stroke-width: 1.0;"/><text fill="#BBBBBB" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="993" y="185.5129">calls method</text><polygon fill="#BBBBBB" points="1057,181.3939,1061,183.3939,1057,185.3939,1057,181.3939" style="stroke: #BBBBBB; stroke-width: 1.0;"/><!--MD5=[6b4fb6646d93095348e666c227245bed]
reverse link IMServiceArc to IMProtocolState--><path d="M1293.94,887.794 C1319.77,887.794 1344.08,887.794 1365.66,887.794 " fill="none" id="IMServiceArc&lt;-IMProtocolState" style="stroke: #FFFFFF; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1280.72,887.794,1286.72,891.794,1292.72,887.794,1286.72,883.794,1280.72,887.794" style="stroke: #FFFFFF; stroke-width: 1.0;"/><text fill="#BBBBBB" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="1298.75" y="881.0129">pending</text><polygon fill="#BBBBBB" points="1339.75,876.8939,1343.75,878.8939,1339.75,880.8939,1339.75,876.8939" style="stroke: #BBBBBB; stroke-width: 1.0;"/><text fill="#BBBBBB" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="6" x="1288.1081" y="884.8809">1</text><text fill="#BBBBBB" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="6" x="1352.0626" y="884.487">1</text><!--MD5=[6b4fb6646d93095348e666c227245bed]
reverse link IMServiceArc to IMProtocolState--><path d="M1293.76,908.854 C1311.85,908.204 1329.76,907.204 1347.25,905.794 C1353.37,905.304 1359.65,904.654 1365.98,903.904 " fill="none" id="IMServiceArc&lt;-IMProtocolState-1" style="stroke: #FFFFFF; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1280.56,909.264,1286.6803,913.0774,1292.5543,908.8945,1286.434,905.0811,1280.56,909.264" style="stroke: #FFFFFF; stroke-width: 1.0;"/><text fill="#BBBBBB" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="1300.25" y="902.0129">current</text><polygon fill="#BBBBBB" points="1338.25,897.8939,1342.25,899.8939,1338.25,901.8939,1338.25,897.8939" style="stroke: #BBBBBB; stroke-width: 1.0;"/><text fill="#BBBBBB" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="6" x="1287.9448" y="906.787">1</text><text fill="#BBBBBB" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="6" x="1352.1112" y="901.9105">1</text><!--MD5=[9d7eb796e9820a8b2d4fba50c32948e6]
reverse link IMService to IMServiceArc--><path d="M898.82,567.524 C901.81,612.594 905.77,672.304 909.46,727.884 " fill="none" id="IMService&lt;-IMServiceArc" style="stroke: #FFFFFF; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="897.95,554.334,894.3543,560.5847,898.7412,566.3079,902.3369,560.0572,897.95,554.334" style="stroke: #FFFFFF; stroke-width: 1.0;"/><text fill="#BBBBBB" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="36" x="908" y="694.5129">wrapps</text><polygon fill="#BBBBBB" points="922.5,703.4939,924.5,707.4939,926.5,703.4939,922.5,703.4939" style="stroke: #BBBBBB; stroke-width: 1.0;"/><text fill="#BBBBBB" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="6" x="892.0658" y="572.7234">1</text><text fill="#BBBBBB" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="6" x="902.8465" y="717.5625">1</text><!--MD5=[b19c1c1d3b53e1226200847519114c5e]
link KeyboardVisibility to ReceiveSurroundingText--><!--MD5=[d24b75a4d60a1da04c9f14384a7a7422]
link KeyboardVisibility to HintPurpose--><!--MD5=[fbc08b2f1f818d2713fffeb2cc43c3ee]
@startuml submitter
!define DARKBLUE
!includeurl https://raw.githubusercontent.com/grelltrier/RedDress-PlantUML/master/style.puml

package submitter {

    +enum Submission {
        Text(String)
        Keycode(u32)
        ToggleKeycode(u32)
        Modifier(keyboard::Modifier)
        Erase(u32)
    }

    +class Submitter<T implements KeyboardVisibility + HintPurpose, D implements ReceiveSurroundingText> {
        event_queue: EventQueue

        {static} +new(ui_connector: T, content_connector: D): Submitter<T, D>
        +fetch_events()
        +release_all_keys_and_modifiers()
        +submit(submission: Submission)
        submit_text(text: &str)
        erase(no_char: u32) {
    }

    class Wayland{
        {static} get_wl_display_seat(): (Display, WlSeat)
        {static} get_wl_global_mgr(display: &Display): (EventQueue, GlobalManager)
        {static} try_get_mgrs(global_mgr: &GlobalManager): (Option<VirtualKeyboardMgr>, Option<InputMethodMgr>)
        {static} +get_layer_shell(): Option<LayerShell> 
        {static} +init_wayland(): (EventQueue, WlSeat, Option<VirtualKeyboardMgr>, Option<InputMethodMgr>) 

        {static} +make_overlay_layer(window: &gtk::Window)

    }
    note top of Wayland : This class does not exist and only serves for the modeling of its functions

    +class VKService {
        base_time: std::time::Instant
        pressed_keys: HashSet<u32>
        pressed_modifiers: ModifiersBitflag
        virtual_keyboard: Proxy<ZwpVirtualKeyboardV1>

        drop()

        {static} +new(seat: &WlSeat, vk_mgr: &Main<ZwpVirtualKeyboardManagerV1>):  Arc<Mutex<VKService>>
        {static} init_virtual_keyboard(virtual_keyboard_main: & Main<ZwpVirtualKeyboardV1>)
        get_time()
        +release_all_keys_and_modifiers(): Result<(), SubmitError> 
        +release_all_keys(): Result<(), SubmitError>
        +press_release_key(keycode: u32): Result<(), SubmitError>
        +toggle_key(keycode: u32): Result<(), SubmitError> 
        +send_key(keycode: u32, keymotion: KeyMotion): Result<(), SubmitError>
        send_keycode(keycode: u32, keymotion: KeyMotion): Result<(), SubmitError> 
        +release_all_modifiers(): Result<(), SubmitError>
        +toggle_modifier(modifier: keyboard::Modifier): Result<(), SubmitError>
        send_modifiers_bitflag(modifiers: ModifiersBitflag): Result<(), SubmitError>
        +send_unicode_str(text: &str): Result<(), SubmitError>
        send_unicode_char(unicode_char: char): Result<(), SubmitError>
        release_keys_on_ctrl_c(vk_service: Arc<Mutex<VKService>>)
    }

    together {
            
        class IMProtocolState {
            surrounding_text: String
            cursor: u32
            content_purpose: ContentPurpose
            content_hint: ContentHint
            text_change_cause: ChangeCause
            active: bool

            fn default(): IMProtocolState
        }

        class IMServiceArc<T implements KeyboardVisibility + HintPurpose, D implements ReceiveSurroundingText> {
            im: Main<ZwpInputMethodV2>
            ui_connector: T
            content_connector: D
            serial: Wrapping<u32>

            {static} new(seat: &WlSeat, im_manager: Main<ZwpInputMethodManagerV2>, ui_connector: T, content_connector: D): Arc<Mutex<IMServiceArc<T, D>>> 
            assign_filter(im_service: Arc<Mutex<IMServiceArc<T, D>>>)
            commit_string(text: String): Result<(), SubmitError>
            delete_surrounding_text(before: u32, after: u32): Result<(), SubmitError>
            commit(): Result<(), SubmitError>
            is_active(): bool
            get_surrounding_text(): (String, String)
            handle_activate()
            handle_deactivate()
            handle_surrounding_text(text: String, cursor: u32, anchor: u32)
            handle_text_change_cause(cause: ChangeCause)
            handle_content_type(hint: ContentHint, purpose: ContentPurpose)
            handle_done()
            handle_unavailable()
            pending_becomes_current()
            limit_before_after(before: u32, after: u32): (u32, u32)
            update_cursor_and_surrounding_text(before: u32, after: u32)
        }

        +class IMService<T implements KeyboardVisibility + HintPurpose, D implements ReceiveSurroundingText> {
            {static} +new(seat: &WlSeat, im_manager: Main<ZwpInputMethodManagerV2>, ui_connector: T, content_connector: D): IMService<T, D> 
            +commit_string(text: String): Result<(), SubmitError>
            +delete_surrounding_text(before: u32, after: u32): Result<(), SubmitError>
            +commit(): Result<(), SubmitError>
            +is_active(): bool
            +get_surrounding_text(): (String, String)
        }

        +interface KeyboardVisibility {
            show_keyboard()
            hide_keyboard()
        }

        +interface ReceiveSurroundingText {
            text_changed(string_left_of_cursor: String, string_right_of_cursor: String)
        }

        +interface HintPurpose {
            fn set_hint_purpose(content_hint: ContentHint, content_purpose: ContentPurpose)
        }
    }

    Submitter *- - IMService : > uses
    Submitter *- - VKService : > uses
    Submission - Submitter : < handles
    Submitter - Wayland : > calls method
    IMServiceArc "1" *- "1" IMProtocolState : > pending
    IMServiceArc "1" *- "1" IMProtocolState : > current
    IMService "1" *- - "1" IMServiceArc : > wrapps
}
@enduml

@startuml submitter



skinparam backgroundColor 777
skinparam stereotypeCBackgroundColor 1a66c2









skinparam backgroundColor 777







skinparam circledCharacter {
  radius 8
  fontSize 11
  fontName Verdana
}

skinparam class {
    backgroundColor 2e2e2e
  borderColor 1b1b1b
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
    arrowColor fff
  arrowFontName Verdana
  arrowFontColor bbb
  arrowFontSize 11

  attributeFontColor aaa
  attributeFontSize 11
  attributeIconSize 11
}


skinparam actor {
    backgroundColor 1a66c2
  borderColor 002642
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}

skinparam participant {
    backgroundColor 2e2e2e
  borderColor 1b1b1b
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}

skinparam collections {
    backgroundColor 2e2e2e
  borderColor 1b1b1b
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}

skinparam SequenceBox{
    backgroundColor 575757
  borderColor 767676
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}


skinparam interface {
    backgroundColor 1a66c2
  borderColor 002642
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}

skinparam component {
    backgroundColor 2e2e2e
  borderColor 1b1b1b
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}

skinparam node {
    backgroundColor 2e2e2e
  borderColor 1b1b1b
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}

skinparam database {
    backgroundColor 2e2e2e
  borderColor 1b1b1b
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}

skinparam queue {
    backgroundColor 2e2e2e
  borderColor 1b1b1b
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}


skinparam usecase {
    backgroundColor 2e2e2e
  borderColor 1b1b1b
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
    arrowColor fff
  arrowFontName Verdana
  arrowFontColor bbb
  arrowFontSize 11
}

skinparam activity {
    backgroundColor 2e2e2e
  borderColor 1b1b1b
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
    arrowColor fff
  arrowFontName Verdana
  arrowFontColor bbb
  arrowFontSize 11
}

skinparam sequence {
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
    arrowColor fff
  arrowFontName Verdana
  arrowFontColor bbb
  arrowFontSize 11

  lifeLineBorderColor 1a66c2
  lifeLineBackgroundColor 575757
}

skinparam boundary {
    backgroundColor 1a66c2
  borderColor 002642
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}

skinparam control {
    backgroundColor 1a66c2
  borderColor 002642
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}

skinparam entity {
    backgroundColor 1a66c2
  borderColor 002642
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}


skinparam state {
    backgroundColor 2e2e2e
  borderColor 1b1b1b
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
    arrowColor fff
  arrowFontName Verdana
  arrowFontColor bbb
  arrowFontSize 11
  startColor 1a66c2
  endColor 002642
}


skinparam object {
    backgroundColor 2e2e2e
  borderColor 1b1b1b
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
    arrowColor fff
  arrowFontName Verdana
  arrowFontColor bbb
  arrowFontSize 11
}


skinparam note {
    backgroundColor 1a66c2
  borderColor 002642
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}

skinparam cloud {
    backgroundColor 2e2e2e
  borderColor 1b1b1b
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
    arrowColor fff
  arrowFontName Verdana
  arrowFontColor bbb
  arrowFontSize 11
}

skinparam rectangle {
    backgroundColor 2e2e2e
  borderColor 1b1b1b
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}

skinparam storage {
    backgroundColor 2e2e2e
  borderColor 1b1b1b
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}


package submitter {

    +enum Submission {
        Text(String)
        Keycode(u32)
        ToggleKeycode(u32)
        Modifier(keyboard::Modifier)
        Erase(u32)
    }

    +class Submitter<T implements KeyboardVisibility + HintPurpose, D implements ReceiveSurroundingText> {
        event_queue: EventQueue

        {static} +new(ui_connector: T, content_connector: D): Submitter<T, D>
        +fetch_events()
        +release_all_keys_and_modifiers()
        +submit(submission: Submission)
        submit_text(text: &str)
        erase(no_char: u32) {
    }

    class Wayland{
        {static} get_wl_display_seat(): (Display, WlSeat)
        {static} get_wl_global_mgr(display: &Display): (EventQueue, GlobalManager)
        {static} try_get_mgrs(global_mgr: &GlobalManager): (Option<VirtualKeyboardMgr>, Option<InputMethodMgr>)
        {static} +get_layer_shell(): Option<LayerShell> 
        {static} +init_wayland(): (EventQueue, WlSeat, Option<VirtualKeyboardMgr>, Option<InputMethodMgr>) 

        {static} +make_overlay_layer(window: &gtk::Window)

    }
    note top of Wayland : This class does not exist and only serves for the modeling of its functions

    +class VKService {
        base_time: std::time::Instant
        pressed_keys: HashSet<u32>
        pressed_modifiers: ModifiersBitflag
        virtual_keyboard: Proxy<ZwpVirtualKeyboardV1>

        drop()

        {static} +new(seat: &WlSeat, vk_mgr: &Main<ZwpVirtualKeyboardManagerV1>):  Arc<Mutex<VKService>>
        {static} init_virtual_keyboard(virtual_keyboard_main: & Main<ZwpVirtualKeyboardV1>)
        get_time()
        +release_all_keys_and_modifiers(): Result<(), SubmitError> 
        +release_all_keys(): Result<(), SubmitError>
        +press_release_key(keycode: u32): Result<(), SubmitError>
        +toggle_key(keycode: u32): Result<(), SubmitError> 
        +send_key(keycode: u32, keymotion: KeyMotion): Result<(), SubmitError>
        send_keycode(keycode: u32, keymotion: KeyMotion): Result<(), SubmitError> 
        +release_all_modifiers(): Result<(), SubmitError>
        +toggle_modifier(modifier: keyboard::Modifier): Result<(), SubmitError>
        send_modifiers_bitflag(modifiers: ModifiersBitflag): Result<(), SubmitError>
        +send_unicode_str(text: &str): Result<(), SubmitError>
        send_unicode_char(unicode_char: char): Result<(), SubmitError>
        release_keys_on_ctrl_c(vk_service: Arc<Mutex<VKService>>)
    }

    together {
            
        class IMProtocolState {
            surrounding_text: String
            cursor: u32
            content_purpose: ContentPurpose
            content_hint: ContentHint
            text_change_cause: ChangeCause
            active: bool

            fn default(): IMProtocolState
        }

        class IMServiceArc<T implements KeyboardVisibility + HintPurpose, D implements ReceiveSurroundingText> {
            im: Main<ZwpInputMethodV2>
            ui_connector: T
            content_connector: D
            serial: Wrapping<u32>

            {static} new(seat: &WlSeat, im_manager: Main<ZwpInputMethodManagerV2>, ui_connector: T, content_connector: D): Arc<Mutex<IMServiceArc<T, D>>> 
            assign_filter(im_service: Arc<Mutex<IMServiceArc<T, D>>>)
            commit_string(text: String): Result<(), SubmitError>
            delete_surrounding_text(before: u32, after: u32): Result<(), SubmitError>
            commit(): Result<(), SubmitError>
            is_active(): bool
            get_surrounding_text(): (String, String)
            handle_activate()
            handle_deactivate()
            handle_surrounding_text(text: String, cursor: u32, anchor: u32)
            handle_text_change_cause(cause: ChangeCause)
            handle_content_type(hint: ContentHint, purpose: ContentPurpose)
            handle_done()
            handle_unavailable()
            pending_becomes_current()
            limit_before_after(before: u32, after: u32): (u32, u32)
            update_cursor_and_surrounding_text(before: u32, after: u32)
        }

        +class IMService<T implements KeyboardVisibility + HintPurpose, D implements ReceiveSurroundingText> {
            {static} +new(seat: &WlSeat, im_manager: Main<ZwpInputMethodManagerV2>, ui_connector: T, content_connector: D): IMService<T, D> 
            +commit_string(text: String): Result<(), SubmitError>
            +delete_surrounding_text(before: u32, after: u32): Result<(), SubmitError>
            +commit(): Result<(), SubmitError>
            +is_active(): bool
            +get_surrounding_text(): (String, String)
        }

        +interface KeyboardVisibility {
            show_keyboard()
            hide_keyboard()
        }

        +interface ReceiveSurroundingText {
            text_changed(string_left_of_cursor: String, string_right_of_cursor: String)
        }

        +interface HintPurpose {
            fn set_hint_purpose(content_hint: ContentHint, content_purpose: ContentPurpose)
        }
    }

    Submitter *- - IMService : > uses
    Submitter *- - VKService : > uses
    Submission - Submitter : < handles
    Submitter - Wayland : > calls method
    IMServiceArc "1" *- "1" IMProtocolState : > pending
    IMServiceArc "1" *- "1" IMProtocolState : > current
    IMService "1" *- - "1" IMServiceArc : > wrapps
}
@enduml

PlantUML version 1.2020.15(Sun Jun 28 13:39:45 CEST 2020)
(MIT source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>