<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="532px" preserveAspectRatio="none" style="width:461px;height:532px;" version="1.1" viewBox="0 0 461 532" width="461px" zoomAndPan="magnify"><defs><filter height="300%" id="f20tf1aucu1lc" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><rect fill="#FFFFFF" filter="url(#f20tf1aucu1lc)" height="504.9988" style="stroke: #000000; stroke-width: 2.0;" width="433" x="11" y="11"/><path d="M117,11 L117,20.7999 L107,30.7999 L11,30.7999 " fill="none" style="stroke: #000000; stroke-width: 2.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="96" x="14" y="25.0059">Win::init_view()</text><ellipse cx="120.5" cy="50.7999" fill="#000000" filter="url(#f20tf1aucu1lc)" rx="10" ry="10" style="stroke: none; stroke-width: 1.0;"/><rect fill="#CCCCCC" filter="url(#f20tf1aucu1lc)" height="33.1999" rx="12.5" ry="12.5" style="stroke: #1A66C2; stroke-width: 1.5;" width="185" x="28" y="129.3999"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="38" y="149.6188">layer_shell::make_overlay_layer()</text><polygon fill="#CCCCCC" filter="url(#f20tf1aucu1lc)" points="40.5,80.7999,200.5,80.7999,212.5,92.7999,200.5,104.7999,40.5,104.7999,28.5,92.7999,40.5,80.7999" style="stroke: #1A66C2; stroke-width: 1.5;"/><text fill="#333333" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="18" x="124.5" y="115.0189">yes</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="40.5" y="96.4189">Compositor supports layer shell?</text><polygon fill="#CCCCCC" filter="url(#f20tf1aucu1lc)" points="120.5,182.5998,132.5,194.5998,120.5,206.5998,108.5,194.5998,120.5,182.5998" style="stroke: #1A66C2; stroke-width: 1.5;"/><path d="M238,216.5998 L238,243.9996 L218,247.9996 L238,251.9996 L238,279.3994 A0,0 0 0 0 238,279.3994 L434,279.3994 A0,0 0 0 0 434,279.3994 L434,226.5998 L424,216.5998 L238,216.5998 A0,0 0 0 0 238,216.5998 " fill="#2A86E2" filter="url(#f20tf1aucu1lc)" style="stroke: #1A66C2; stroke-width: 1.0;"/><path d="M424,216.5998 L424,226.5998 L434,226.5998 L424,216.5998 " fill="#2A86E2" style="stroke: #1A66C2; stroke-width: 1.0;"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="244" y="231.8187">The callbacks will cause a message</text><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="244" y="245.0186">to be sent over Relm's stream.</text><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="244" y="258.2185">The message is then handled in the</text><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="244" y="271.4184">update() method of the Win struct</text><rect fill="#CCCCCC" filter="url(#f20tf1aucu1lc)" height="33.1999" rx="12.5" ry="12.5" style="stroke: #1A66C2; stroke-width: 1.5;" width="195" x="23" y="231.3996"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="33" y="251.6186">Set up callbacks for possible events</text><rect fill="#CCCCCC" filter="url(#f20tf1aucu1lc)" height="33.1999" rx="12.5" ry="12.5" style="stroke: #1A66C2; stroke-width: 1.5;" width="133" x="54" y="299.3994"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="64" y="319.6183">Make all widgets visible</text><path d="M190,344.3994 L190,365.1992 L170,369.1992 L190,373.1992 L190,393.9991 A0,0 0 0 0 190,393.9991 L394,393.9991 A0,0 0 0 0 394,393.9991 L394,354.3994 L384,344.3994 L190,344.3994 A0,0 0 0 0 190,344.3994 " fill="#2A86E2" filter="url(#f20tf1aucu1lc)" style="stroke: #1A66C2; stroke-width: 1.0;"/><path d="M384,344.3994 L384,354.3994 L394,354.3994 L384,344.3994 " fill="#2A86E2" style="stroke: #1A66C2; stroke-width: 1.0;"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="196" y="359.6183">The window starts out hidden</text><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="196" y="372.8182">and is only displayed when</text><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="196" y="386.0181">requested (by DBus or input_method)</text><rect fill="#CCCCCC" filter="url(#f20tf1aucu1lc)" height="33.1999" rx="12.5" ry="12.5" style="stroke: #1A66C2; stroke-width: 1.5;" width="99" x="71" y="352.5993"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="81" y="372.8182">Hide the window</text><path d="M233.5,412.3991 L233.5,433.199 L213.5,437.199 L233.5,441.199 L233.5,461.9988 A0,0 0 0 0 233.5,461.9988 L418.5,461.9988 A0,0 0 0 0 418.5,461.9988 L418.5,422.3991 L408.5,412.3991 L233.5,412.3991 A0,0 0 0 0 233.5,412.3991 " fill="#2A86E2" filter="url(#f20tf1aucu1lc)" style="stroke: #1A66C2; stroke-width: 1.0;"/><path d="M408.5,412.3991 L408.5,422.3991 L418.5,422.3991 L408.5,412.3991 " fill="#2A86E2" style="stroke: #1A66C2; stroke-width: 1.0;"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="239.5" y="427.6181">The window remains hidden</text><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="239.5" y="440.818">This sets up the stack for</text><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="239.5" y="454.0179">when the window becomes visible</text><rect fill="#CCCCCC" filter="url(#f20tf1aucu1lc)" height="46.3998" rx="12.5" ry="12.5" style="stroke: #1A66C2; stroke-width: 1.5;" width="186" x="27.5" y="413.9991"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="37.5" y="434.218">Make the grid from the</text><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="37.5" y="447.4179">active view of the keyboard visible</text><ellipse cx="120.5" cy="492.9988" fill="#FFFFFF" filter="url(#f20tf1aucu1lc)" rx="11" ry="11" style="stroke: #000000; stroke-width: 1.0;"/><ellipse cx="120.5" cy="492.9988" fill="#000000" rx="6" ry="6" style="stroke: #7F7F7F; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="120.5" x2="120.5" y1="104.7999" y2="129.3999"/><polygon fill="#000000" points="116.5,119.3999,120.5,129.3999,124.5,119.3999,120.5,123.3999" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="212.5" x2="224.5" y1="92.7999" y2="92.7999"/><polygon fill="#000000" points="220.5,135.9998,224.5,145.9998,228.5,135.9998,224.5,139.9998" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="224.5" x2="224.5" y1="92.7999" y2="194.5998"/><line style="stroke: #000000; stroke-width: 1.5;" x1="224.5" x2="132.5" y1="194.5998" y2="194.5998"/><polygon fill="#000000" points="142.5,190.5998,132.5,194.5998,142.5,198.5998,138.5,194.5998" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="120.5" x2="120.5" y1="162.5998" y2="182.5998"/><polygon fill="#000000" points="116.5,172.5998,120.5,182.5998,124.5,172.5998,120.5,176.5998" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="120.5" x2="120.5" y1="60.7999" y2="80.7999"/><polygon fill="#000000" points="116.5,70.7999,120.5,80.7999,124.5,70.7999,120.5,74.7999" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="120.5" x2="120.5" y1="206.5998" y2="231.3996"/><polygon fill="#000000" points="116.5,221.3996,120.5,231.3996,124.5,221.3996,120.5,225.3996" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="120.5" x2="120.5" y1="264.5995" y2="299.3994"/><polygon fill="#000000" points="116.5,289.3994,120.5,299.3994,124.5,289.3994,120.5,293.3994" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="120.5" x2="120.5" y1="332.5993" y2="352.5993"/><polygon fill="#000000" points="116.5,342.5993,120.5,352.5993,124.5,342.5993,120.5,346.5993" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="120.5" x2="120.5" y1="385.7992" y2="413.9991"/><polygon fill="#000000" points="116.5,403.9991,120.5,413.9991,124.5,403.9991,120.5,407.9991" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="120.5" x2="120.5" y1="460.3989" y2="481.9988"/><polygon fill="#000000" points="116.5,471.9988,120.5,481.9988,124.5,471.9988,120.5,475.9988" style="stroke: #000000; stroke-width: 1.0;"/><!--MD5=[cfdf42f4264c95da6b157b5f0770d7f7]
@startuml win_init_view
!define LIGHTBLUE
!includeurl https://raw.githubusercontent.com/grelltrier/RedDress-PlantUML/master/style.puml

partition "Win::init_view()"{  
  start
  if (Compositor supports layer shell?) then (yes)
    :layer_shell::make_overlay_layer();
  endif
  :Set up callbacks for possible events;
  note right
    The callbacks will cause a message
    to be sent over Relm's stream.
    The message is then handled in the
    update() method of the Win struct
  end note
  :Make all widgets visible;
  :Hide the window;
  note right
    The window starts out hidden 
    and is only displayed when
    requested (by DBus or input_method)
  end note
  :Make the grid from the 
  active view of the keyboard visible;
  note right
    The window remains hidden
    This sets up the stack for 
    when the window becomes visible
  end note
  stop
}
@enduml

@startuml win_init_view




skinparam stereotypeCBackgroundColor 1a66c2







skinparam backgroundColor fff








skinparam circledCharacter {
  radius 8
  fontSize 11
  fontName Verdana
}

skinparam class {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
    arrowColor 000
  arrowFontName Verdana
  arrowFontColor 333
  arrowFontSize 11

  attributeFontColor 333
  attributeFontSize 11
  attributeIconSize 11
}


skinparam ActivityBarColor 1a66c2
skinparam activityDiamondBackgroundColor ccc
skinparam activityDiamondBorderColor 1a66c2


skinparam actor {
    backgroundColor 2a86e2
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam participant {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam collections {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam SequenceBox{
    backgroundColor e0e0e0
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}


skinparam interface {
    backgroundColor 2a86e2
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam component {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam node {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam database {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam queue {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}


skinparam usecase {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
    arrowColor 000
  arrowFontName Verdana
  arrowFontColor 333
  arrowFontSize 11
}

skinparam activity {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
    arrowColor 000
  arrowFontName Verdana
  arrowFontColor 333
  arrowFontSize 11
}

skinparam sequence {
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
    arrowColor 000
  arrowFontName Verdana
  arrowFontColor 333
  arrowFontSize 11

  lifeLineBorderColor 2a86e2
  lifeLineBackgroundColor e0e0e0
}

skinparam boundary {
    backgroundColor 2a86e2
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam control {
    backgroundColor 2a86e2
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam entity {
    backgroundColor 2a86e2
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}


skinparam state {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
    arrowColor 000
  arrowFontName Verdana
  arrowFontColor 333
  arrowFontSize 11
  startColor 2a86e2
  endColor 1a66c2
}


skinparam object {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
    arrowColor 000
  arrowFontName Verdana
  arrowFontColor 333
  arrowFontSize 11
}


skinparam note {
    backgroundColor 2a86e2
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam cloud {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
    arrowColor 000
  arrowFontName Verdana
  arrowFontColor 333
  arrowFontSize 11
}

skinparam rectangle {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam storage {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}


partition "Win::init_view()"{  
  start
  if (Compositor supports layer shell?) then (yes)
    :layer_shell::make_overlay_layer();
  endif
  :Set up callbacks for possible events;
  note right
    The callbacks will cause a message
    to be sent over Relm's stream.
    The message is then handled in the
    update() method of the Win struct
  end note
  :Make all widgets visible;
  :Hide the window;
  note right
    The window starts out hidden 
    and is only displayed when
    requested (by DBus or input_method)
  end note
  :Make the grid from the 
  active view of the keyboard visible;
  note right
    The window remains hidden
    This sets up the stack for 
    when the window becomes visible
  end note
  stop
}
@enduml

PlantUML version 1.2020.19(Mon Oct 12 17:10:01 CEST 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>