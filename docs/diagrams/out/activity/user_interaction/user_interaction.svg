<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="514px" preserveAspectRatio="none" style="width:1543px;height:514px;" version="1.1" viewBox="0 0 1543 514" width="1543px" zoomAndPan="magnify"><defs><filter height="300%" id="fkkq5q27y5t59" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><rect fill="#FFFFFF" filter="url(#fkkq5q27y5t59)" height="486.9993" style="stroke: #000000; stroke-width: 2.0;" width="1515" x="11" y="11"/><path d="M123,11 L123,20.7999 L113,30.7999 L11,30.7999 " fill="none" style="stroke: #000000; stroke-width: 2.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="102" x="14" y="25.0059">user_interaction</text><ellipse cx="686" cy="50.7999" fill="#000000" filter="url(#fkkq5q27y5t59)" rx="10" ry="10" style="stroke: none; stroke-width: 1.0;"/><rect fill="#CCCCCC" filter="url(#fkkq5q27y5t59)" height="33.1999" rx="12.5" ry="12.5" style="stroke: #1A66C2; stroke-width: 1.5;" width="148" x="612" y="80.7999"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="622" y="101.0189">User interacts with screen</text><path d="M1379,296.9998 L1379,372.9993 L1516,372.9993 L1516,306.9998 L1506,296.9998 L1379,296.9998 " fill="#2A86E2" filter="url(#fkkq5q27y5t59)" style="stroke: #1A66C2; stroke-width: 1.0;"/><path d="M1506,296.9998 L1506,306.9998 L1516,306.9998 L1506,296.9998 " fill="#2A86E2" style="stroke: #1A66C2; stroke-width: 1.0;"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1385" y="312.2188">The messages are sent</text><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="1385" y="325.4187">to the Relm stream</text><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="1385" y="338.6186">and handled in the</text><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="1385" y="351.8185">update() method of</text><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="1385" y="365.0184">the Win struct.</text><polygon fill="#CCCCCC" filter="url(#fkkq5q27y5t59)" points="290.5,133.9998,324.5,133.9998,336.5,145.9998,324.5,157.9998,290.5,157.9998,278.5,145.9998,290.5,133.9998" style="stroke: #1A66C2; stroke-width: 1.5;"/><text fill="#333333" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="18" x="311.5" y="168.2188">yes</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="290.5" y="149.6188">press?</text><polygon fill="#CCCCCC" filter="url(#fkkq5q27y5t59)" points="307.5,191.1997,307.5,191.1997,319.5,203.1997,307.5,215.1997,307.5,215.1997,295.5,203.1997,307.5,191.1997" style="stroke: #1A66C2; stroke-width: 1.5;"/><text fill="#333333" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="244.5" y="200.2188">immediatly</text><text fill="#333333" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="319.5" y="200.2188">after specified delay</text><rect fill="#CCCCCC" filter="url(#fkkq5q27y5t59)" height="33.1999" rx="12.5" ry="12.5" style="stroke: #1A66C2; stroke-width: 1.5;" width="189" x="65.5" y="225.1997"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="75.5" y="245.4187">GestureDrag detects begin of drag</text><rect fill="#CCCCCC" filter="url(#fkkq5q27y5t59)" height="33.1999" style="stroke: #1A66C2; stroke-width: 1.5;" width="104" x="108" y="293.3996"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="118" y="313.6186">drag_begin event</text><rect fill="#CCCCCC" filter="url(#fkkq5q27y5t59)" height="33.1999" style="stroke: #1A66C2; stroke-width: 1.5;" width="274" x="23" y="361.5995"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="33" y="381.8185">Msg::GestureSignal(x, y, GestureSignal::DragBegin)</text><ellipse cx="160" cy="440.7994" fill="#FFFFFF" filter="url(#fkkq5q27y5t59)" rx="11" ry="11" style="stroke: #000000; stroke-width: 1.0;"/><ellipse cx="160" cy="440.7994" fill="#000000" rx="6" ry="6" style="stroke: #7F7F7F; stroke-width: 1.0;"/><rect fill="#CCCCCC" filter="url(#fkkq5q27y5t59)" height="33.1999" rx="12.5" ry="12.5" style="stroke: #1A66C2; stroke-width: 1.5;" width="206" x="352" y="225.1997"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="362" y="245.4187">GestureLongPress detects long press</text><rect fill="#CCCCCC" filter="url(#fkkq5q27y5t59)" height="33.1999" style="stroke: #1A66C2; stroke-width: 1.5;" width="90" x="410" y="293.3996"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="420" y="313.6186">pressed event</text><rect fill="#CCCCCC" filter="url(#fkkq5q27y5t59)" height="33.1999" style="stroke: #1A66C2; stroke-width: 1.5;" width="276" x="317" y="361.5995"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="327" y="381.8185">Msg::GestureSignal(x, y, GestureSignal::LongPress)</text><ellipse cx="455" cy="440.7994" fill="#FFFFFF" filter="url(#fkkq5q27y5t59)" rx="11" ry="11" style="stroke: #000000; stroke-width: 1.0;"/><ellipse cx="455" cy="440.7994" fill="#000000" rx="6" ry="6" style="stroke: #7F7F7F; stroke-width: 1.0;"/><polygon fill="#CCCCCC" filter="url(#fkkq5q27y5t59)" points="775,133.9998,809,133.9998,821,145.9998,809,157.9998,775,157.9998,763,145.9998,775,133.9998" style="stroke: #1A66C2; stroke-width: 1.5;"/><text fill="#333333" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="18" x="796" y="168.2188">yes</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="775" y="149.6188">swipe?</text><text fill="#333333" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="821" y="143.0189">no (release)</text><rect fill="#CCCCCC" filter="url(#fkkq5q27y5t59)" height="33.1999" rx="12.5" ry="12.5" style="stroke: #1A66C2; stroke-width: 1.5;" width="196" x="694" y="191.1997"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="704" y="211.4187">GestureDrag detects update of drag</text><rect fill="#CCCCCC" filter="url(#fkkq5q27y5t59)" height="33.1999" style="stroke: #1A66C2; stroke-width: 1.5;" width="111" x="736.5" y="259.3996"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="746.5" y="279.6186">drag_update event</text><rect fill="#CCCCCC" filter="url(#fkkq5q27y5t59)" height="33.1999" rx="12.5" ry="12.5" style="stroke: #1A66C2; stroke-width: 1.5;" width="378" x="603" y="327.5995"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="613" y="347.8185">Calculate x and y coordinate of message from events startpoint and offset</text><rect fill="#CCCCCC" filter="url(#fkkq5q27y5t59)" height="33.1999" style="stroke: #1A66C2; stroke-width: 1.5;" width="282" x="651" y="395.7994"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="661" y="416.0184">Msg::GestureSignal(x, y, GestureSignal::DragUpdate)</text><ellipse cx="792" cy="474.9993" fill="#FFFFFF" filter="url(#fkkq5q27y5t59)" rx="11" ry="11" style="stroke: #000000; stroke-width: 1.0;"/><ellipse cx="792" cy="474.9993" fill="#000000" rx="6" ry="6" style="stroke: #7F7F7F; stroke-width: 1.0;"/><rect fill="#CCCCCC" filter="url(#fkkq5q27y5t59)" height="33.1999" rx="12.5" ry="12.5" style="stroke: #1A66C2; stroke-width: 1.5;" width="181" x="1089.5" y="187.5998"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="1099.5" y="207.8187">GestureDrag detects end of drag</text><rect fill="#CCCCCC" filter="url(#fkkq5q27y5t59)" height="33.1999" style="stroke: #1A66C2; stroke-width: 1.5;" width="96" x="1132" y="255.7997"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="1142" y="276.0186">drag_end event</text><rect fill="#CCCCCC" filter="url(#fkkq5q27y5t59)" height="33.1999" rx="12.5" ry="12.5" style="stroke: #1A66C2; stroke-width: 1.5;" width="378" x="991" y="323.9996"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="1001" y="344.2185">Calculate x and y coordinate of message from events startpoint and offset</text><rect fill="#CCCCCC" filter="url(#fkkq5q27y5t59)" height="33.1999" style="stroke: #1A66C2; stroke-width: 1.5;" width="266" x="1047" y="392.1995"/><text fill="#000000" font-family="Verdana" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="1057" y="412.4184">Msg::GestureSignal(x, y, GestureSignal::DragEnd)</text><ellipse cx="1180" cy="471.3994" fill="#FFFFFF" filter="url(#fkkq5q27y5t59)" rx="11" ry="11" style="stroke: #000000; stroke-width: 1.0;"/><ellipse cx="1180" cy="471.3994" fill="#000000" rx="6" ry="6" style="stroke: #7F7F7F; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="686" x2="686" y1="60.7999" y2="80.7999"/><polygon fill="#000000" points="682,70.7999,686,80.7999,690,70.7999,686,74.7999" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="160" x2="160" y1="258.3996" y2="293.3996"/><polygon fill="#000000" points="156,283.3996,160,293.3996,164,283.3996,160,287.3996" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="160" x2="160" y1="326.5995" y2="361.5995"/><polygon fill="#000000" points="156,351.5995,160,361.5995,164,351.5995,160,355.5995" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="160" x2="160" y1="394.7994" y2="429.7994"/><polygon fill="#000000" points="156,419.7994,160,429.7994,164,419.7994,160,423.7994" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="455" x2="455" y1="258.3996" y2="293.3996"/><polygon fill="#000000" points="451,283.3996,455,293.3996,459,283.3996,455,287.3996" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="455" x2="455" y1="326.5995" y2="361.5995"/><polygon fill="#000000" points="451,351.5995,455,361.5995,459,351.5995,455,355.5995" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="455" x2="455" y1="394.7994" y2="429.7994"/><polygon fill="#000000" points="451,419.7994,455,429.7994,459,419.7994,455,423.7994" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="295.5" x2="160" y1="203.1997" y2="203.1997"/><line style="stroke: #000000; stroke-width: 1.5;" x1="160" x2="160" y1="203.1997" y2="225.1997"/><polygon fill="#000000" points="156,215.1997,160,225.1997,164,215.1997,160,219.1997" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="319.5" x2="455" y1="203.1997" y2="203.1997"/><line style="stroke: #000000; stroke-width: 1.5;" x1="455" x2="455" y1="203.1997" y2="225.1997"/><polygon fill="#000000" points="451,215.1997,455,225.1997,459,215.1997,455,219.1997" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="792" x2="792" y1="224.3996" y2="259.3996"/><polygon fill="#000000" points="788,249.3996,792,259.3996,796,249.3996,792,253.3996" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="792" x2="792" y1="292.5995" y2="327.5995"/><polygon fill="#000000" points="788,317.5995,792,327.5995,796,317.5995,792,321.5995" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="792" x2="792" y1="360.7994" y2="395.7994"/><polygon fill="#000000" points="788,385.7994,792,395.7994,796,385.7994,792,389.7994" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="792" x2="792" y1="428.9993" y2="463.9993"/><polygon fill="#000000" points="788,453.9993,792,463.9993,796,453.9993,792,457.9993" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="1180" x2="1180" y1="220.7997" y2="255.7997"/><polygon fill="#000000" points="1176,245.7997,1180,255.7997,1184,245.7997,1180,249.7997" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="1180" x2="1180" y1="288.9996" y2="323.9996"/><polygon fill="#000000" points="1176,313.9996,1180,323.9996,1184,313.9996,1180,317.9996" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="1180" x2="1180" y1="357.1995" y2="392.1995"/><polygon fill="#000000" points="1176,382.1995,1180,392.1995,1184,382.1995,1180,386.1995" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="1180" x2="1180" y1="425.3994" y2="460.3994"/><polygon fill="#000000" points="1176,450.3994,1180,460.3994,1184,450.3994,1180,454.3994" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="307.5" x2="307.5" y1="157.9998" y2="191.1997"/><polygon fill="#000000" points="303.5,181.1997,307.5,191.1997,311.5,181.1997,307.5,185.1997" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="792" x2="792" y1="157.9998" y2="191.1997"/><polygon fill="#000000" points="788,181.1997,792,191.1997,796,181.1997,792,185.1997" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="336.5" x2="763" y1="145.9998" y2="145.9998"/><polygon fill="#000000" points="753,141.9998,763,145.9998,753,149.9998,757,145.9998" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="686" x2="686" y1="113.9998" y2="118.9998"/><line style="stroke: #000000; stroke-width: 1.5;" x1="686" x2="307.5" y1="118.9998" y2="118.9998"/><line style="stroke: #000000; stroke-width: 1.5;" x1="307.5" x2="307.5" y1="118.9998" y2="133.9998"/><polygon fill="#000000" points="303.5,123.9998,307.5,133.9998,311.5,123.9998,307.5,127.9998" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="821" x2="1180" y1="145.9998" y2="145.9998"/><line style="stroke: #000000; stroke-width: 1.5;" x1="1180" x2="1180" y1="145.9998" y2="187.5998"/><polygon fill="#000000" points="1176,177.5998,1180,187.5998,1184,177.5998,1180,181.5998" style="stroke: #000000; stroke-width: 1.0;"/><!--MD5=[ebd3e80fe140a9e208a823ac7017e657]
@startuml user_interaction
!define LIGHTBLUE
!includeurl https://raw.githubusercontent.com/grelltrier/RedDress-PlantUML/master/style.puml

partition "user_interaction"{

  start
  :User interacts with screen;
  if (press?) then (yes)
    if () then (immediatly)
      :GestureDrag detects begin of drag;
      :drag_begin event]
      :Msg::GestureSignal(x, y, GestureSignal::DragBegin)]
    stop
    else (after specified delay)
      :GestureLongPress detects long press;
      :pressed event]
      :Msg::GestureSignal(x, y, GestureSignal::LongPress)]
    stop
    endif
  elseif (swipe?) then (yes)
    :GestureDrag detects update of drag;
    :drag_update event]
    :Calculate x and y coordinate of message from events startpoint and offset;
    :Msg::GestureSignal(x, y, GestureSignal::DragUpdate)]
    stop
  else (no (release))
    :GestureDrag detects end of drag;
    :drag_end event]
    :Calculate x and y coordinate of message from events startpoint and offset;
    :Msg::GestureSignal(x, y, GestureSignal::DragEnd)]
    stop
  endif

  floating note right
    The messages are sent
    to the Relm stream 
    and handled in the
    update() method of
    the Win struct.
  end note
}
@enduml

@startuml user_interaction




skinparam stereotypeCBackgroundColor 1a66c2







skinparam backgroundColor fff








skinparam circledCharacter {
  radius 8
  fontSize 11
  fontName Verdana
}

skinparam class {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
    arrowColor 000
  arrowFontName Verdana
  arrowFontColor 333
  arrowFontSize 11

  attributeFontColor 333
  attributeFontSize 11
  attributeIconSize 11
}


skinparam ActivityBarColor 1a66c2
skinparam activityDiamondBackgroundColor ccc
skinparam activityDiamondBorderColor 1a66c2


skinparam actor {
    backgroundColor 2a86e2
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam participant {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam collections {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam SequenceBox{
    backgroundColor e0e0e0
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}


skinparam interface {
    backgroundColor 2a86e2
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam component {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam node {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam database {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam queue {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}


skinparam usecase {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
    arrowColor 000
  arrowFontName Verdana
  arrowFontColor 333
  arrowFontSize 11
}

skinparam activity {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
    arrowColor 000
  arrowFontName Verdana
  arrowFontColor 333
  arrowFontSize 11
}

skinparam sequence {
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
    arrowColor 000
  arrowFontName Verdana
  arrowFontColor 333
  arrowFontSize 11

  lifeLineBorderColor 2a86e2
  lifeLineBackgroundColor e0e0e0
}

skinparam boundary {
    backgroundColor 2a86e2
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam control {
    backgroundColor 2a86e2
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam entity {
    backgroundColor 2a86e2
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}


skinparam state {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
    arrowColor 000
  arrowFontName Verdana
  arrowFontColor 333
  arrowFontSize 11
  startColor 2a86e2
  endColor 1a66c2
}


skinparam object {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
    arrowColor 000
  arrowFontName Verdana
  arrowFontColor 333
  arrowFontSize 11
}


skinparam note {
    backgroundColor 2a86e2
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam cloud {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
    arrowColor 000
  arrowFontName Verdana
  arrowFontColor 333
  arrowFontSize 11
}

skinparam rectangle {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam storage {
    backgroundColor ccc
  borderColor 1a66c2
    fontColor 000
  fontName Verdana
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}


partition "user_interaction"{

  start
  :User interacts with screen;
  if (press?) then (yes)
    if () then (immediatly)
      :GestureDrag detects begin of drag;
      :drag_begin event]
      :Msg::GestureSignal(x, y, GestureSignal::DragBegin)]
    stop
    else (after specified delay)
      :GestureLongPress detects long press;
      :pressed event]
      :Msg::GestureSignal(x, y, GestureSignal::LongPress)]
    stop
    endif
  elseif (swipe?) then (yes)
    :GestureDrag detects update of drag;
    :drag_update event]
    :Calculate x and y coordinate of message from events startpoint and offset;
    :Msg::GestureSignal(x, y, GestureSignal::DragUpdate)]
    stop
  else (no (release))
    :GestureDrag detects end of drag;
    :drag_end event]
    :Calculate x and y coordinate of message from events startpoint and offset;
    :Msg::GestureSignal(x, y, GestureSignal::DragEnd)]
    stop
  endif

  floating note right
    The messages are sent
    to the Relm stream 
    and handled in the
    update() method of
    the Win struct.
  end note
}
@enduml

PlantUML version 1.2020.19(Mon Oct 12 17:10:01 CEST 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>